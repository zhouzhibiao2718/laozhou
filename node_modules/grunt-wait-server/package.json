{
  "name": "grunt-wait-server",
  "description": "make grunt wait for server start",
  "version": "0.1.2",
  "homepage": "https://github.com/imyelo/grunt-wait-server",
  "author": {
    "name": "yelo",
    "email": "zhihuzeye@gmail.com",
    "url": "https://github.com/imyelo/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:imyelo/grunt-wait-server.git"
  },
  "bugs": {
    "url": "https://github.com/imyelo/grunt-wait-server/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/imyelo/grunt-wait-server/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "request": "~2.30.0"
  },
  "readme": "# grunt-wait-server\r\n\r\n> make grunt wait for server start\r\n\r\n[![NPM version](https://badge.fury.io/js/grunt-wait-server.png)](http://badge.fury.io/js/grunt-wait-server)\r\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.2`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-wait-server --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-wait-server');\r\n```\r\n\r\n## The \"waitServer\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `waitServer` or `wait-server` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  waitServer: {\r\n    options: {\r\n      url: 'http://localhost:8080',\r\n      fail: function () {},\r\n      timeout: 10 * 1000,\r\n      isforce: false,\r\n      interval: 800,\r\n      print: true\r\n    },\r\n    server: {\r\n      options: {\r\n        url: 'http://localhost:8080',\r\n        fail: function () {},\r\n        timeout: 10 * 1000,\r\n        isforce: false,\r\n        interval: 800,\r\n        print: true\r\n      },\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n### Options\r\n\r\n#### options.url  \r\nType: `string`  \r\nDefault value: `''`  \r\n\r\nthis options is required.  \r\n\r\n\r\n#### options.fail  \r\nType: `function`  \r\nDefault value: `function () {}`  \r\n\r\n\r\n#### options.timeout  \r\nType: `number`  \r\nDefault value: `10 * 1000`  \r\n\r\n\r\n#### options.isforce  \r\nType: `boolean`  \r\nDefault value: `false`  \r\n\r\n\r\n#### options.interval  \r\nType: `number`  \r\nDefault value: `800`  \r\n\r\n\r\n#### options.print  \r\nType: `boolean`  \r\nDefault value: `true` \r\n\r\n\r\nWhen `options.isforce` is true, \r\nthe task will continue after `options.timeout`, \r\neven if the `done` signal in `options.wait` never came.  \r\n\r\n### Usage Examples  \r\n\r\n#### Default Options  \r\nIn this example, the `waitServer` task will wait for the server start with the least options.  \r\n\r\n```js\r\nvar request = require('request');\r\ngrunt.initConfig({\r\n  waitServer: {\r\n    server: {\r\n      options: {\r\n        url: 'http://localhost:8080'\r\n      }\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n#### Custom Options  \r\n\r\n```js\r\nvar request = require('request');\r\ngrunt.initConfig({\r\n  waitServer: {\r\n    server: {\r\n      options: {\r\n        url: 'http://localhost:8080',\r\n        fail: function () {\r\n          console.error('the server had not start'); \r\n        },\r\n        timeout: 20 * 1000,\r\n        isforce: true,\r\n        interval: 200,\r\n        print: false\r\n      }\r\n    }\r\n  },\r\n});\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/imyelo/grunt-wait-server/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-wait-server@0.1.2",
  "_from": "grunt-wait-server@~0.1.1"
}
